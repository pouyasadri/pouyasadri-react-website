{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { parse } from 'node-html-parser';\n// Custom hook for fetching Medium posts\nexport const useFetchPosts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const url = `https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@pouyasadri`;\n      try {\n        const response = await axios.get(url);\n        let articles = response.data.items.map(article => {\n          const root = parse(article.content);\n          const firstImage = root.querySelector('img');\n          const imageUrl = firstImage ? firstImage.getAttribute('src') : null;\n          return {\n            ...article,\n            image: imageUrl\n          };\n        });\n        setPosts(articles.slice(0, 3));\n      } catch (error) {\n        console.error(\"Error fetching Medium posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return posts;\n};\n_s(useFetchPosts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");","map":{"version":3,"names":["useState","useEffect","axios","parse","useFetchPosts","_s","posts","setPosts","fetchPosts","url","response","get","articles","data","items","map","article","root","content","firstImage","querySelector","imageUrl","getAttribute","image","slice","error","console"],"sources":["/Users/pouyasadri/pouyasari-react-master/src/components/MediumPosts/FetchPosts.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { parse } from 'node-html-parser';\n// Custom hook for fetching Medium posts\nexport const useFetchPosts = () => {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const url = `https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@pouyasadri`;\n            try {\n                const response = await axios.get(url);\n                let articles = response.data.items.map(article => {\n                    const root = parse(article.content);\n                    const firstImage = root.querySelector('img');\n                    const imageUrl = firstImage ? firstImage.getAttribute('src') : null;\n\n                    return {\n                        ...article,\n                        image: imageUrl,\n                    };\n                });\n\n                setPosts(articles.slice(0, 3));\n            } catch (error) {\n                console.error(\"Error fetching Medium posts:\", error);\n            }\n        };\n\n        fetchPosts();\n    }, []);\n\n    return posts;\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,kBAAkB;AACxC;AACA,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,GAAG,GAAI,kFAAiF;MAC9F,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACF,GAAG,CAAC;QACrC,IAAIG,QAAQ,GAAGF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,GAAG,CAACC,OAAO,IAAI;UAC9C,MAAMC,IAAI,GAAGd,KAAK,CAACa,OAAO,CAACE,OAAO,CAAC;UACnC,MAAMC,UAAU,GAAGF,IAAI,CAACG,aAAa,CAAC,KAAK,CAAC;UAC5C,MAAMC,QAAQ,GAAGF,UAAU,GAAGA,UAAU,CAACG,YAAY,CAAC,KAAK,CAAC,GAAG,IAAI;UAEnE,OAAO;YACH,GAAGN,OAAO;YACVO,KAAK,EAAEF;UACX,CAAC;QACL,CAAC,CAAC;QAEFd,QAAQ,CAACK,QAAQ,CAACY,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC;IAEDjB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,KAAK;AAChB,CAAC;AAACD,EAAA,CA7BWD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}